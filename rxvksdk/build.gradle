apply plugin: 'com.android.library'

android {
    def propertiesFile = file('properties/version/version.properties')
    def appVersionCode = 1;
    def appVersionName = "1.0";
    if (propertiesFile.canRead()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(propertiesFile))
        appVersionCode = Integer.parseInt(properties['VERSION_CODE']).intValue();
        appVersionName = String.valueOf(properties['VERSION_NAME']);
    } else {
        throw new Exception("Could not read properties/version/version.properties!")
    }

    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28

        versionCode appVersionCode
        versionName appVersionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVer}"
    api 'com.vk:androidsdk:1.6.8'

    // rxjava
    implementation  "io.reactivex:rxjava:${rootProject.ext.rxJavaVersion}"
    implementation  "io.reactivex:rxandroid:${rootProject.ext.rxAndroidVersion}"
    implementation  "com.github.davidmoten:rxjava-extras:${rootProject.ext.rxExtrasVersion}"

    // square
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.retrofitVersion}"

    implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okHttpVersion}"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:${rootProject.ext.okHttpVersion}"

    // dagger
    implementation "javax.annotation:jsr250-api:${rootProject.ext.javaxAnnotationVersion}"
    implementation "javax.inject:javax.inject:${rootProject.ext.javaxInjectVersion}"
    implementation "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"

    compileOnly "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"

    // FragmentWithArgs
    implementation "org.parceler:parceler-api:${rootProject.ext.parcelerVersion}"
    annotationProcessor "org.parceler:parceler:${rootProject.ext.parcelerVersion}"
}

// Place it at the end of the file
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
    }
}

apply from: 'libraryInfo.gradle'
apply from: 'artifactsSetup.gradle'
apply from: 'installSetup.gradle'
apply from: 'bintraySetup.gradle'
apply from: 'mavenCustom.gradle'



